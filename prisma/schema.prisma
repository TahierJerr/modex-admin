generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id String @id @default(cuid())
  name String
  userId String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  processor Processor[] @relation("StoreToProcessor")
  software Software[] @relation("StoreToSoftware")
  graphics Graphics[] @relation("StoreToGraphics")
  memory Memory[] @relation("StoreToMemory")
  storage Storage[] @relation("StoreToStorage")
  power Power[] @relation("StoreToPower")
  case Pccase[] @relation("StoreToCase")
  cooler Cooler[] @relation("StoreToCooler")
  motherboard Motherboard[] @relation("StoreToMotherboard")
  warranty Warranty[] @relation("StoreToWarranty")
  answer Answer[] @relation("StoreToAnswer")
  colors Color[] @relation("StoreToColor")
  computers Computer[] @relation("StoreToComputer")
  orders Order[] @relation("StoreToOrder")
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Billboard {
  id      String @id @default(uuid())
  storeId String
  store   Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label String
  description String
  imageUrl String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  computers Computer[] @relation("CategoryToComputer")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

    @@index([storeId])
    @@index([billboardId])

}

model Processor {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToProcessor", fields: [storeId], references: [id])
  name String
  brand String
  series String
  baseSpeed String
  cores String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Software {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToSoftware", fields: [storeId], references: [id])
  name String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Graphics {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToGraphics", fields: [storeId], references: [id])
  name String
  brand String
  model String
  memory String
  memoryType String
  maxClock String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Memory {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToMemory", fields: [storeId], references: [id])
  name String
  model String
  speed String
  capacity String
  type String
  rgb String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Storage {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToStorage", fields: [storeId], references: [id])
  name String
  model String
  capacity String
  type String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Power {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToPower", fields: [storeId], references: [id])
  name String
  model String
  wattage String
  rating String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Pccase {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCase", fields: [storeId], references: [id])
  name String
  model String
  color String
  motherboardSupport String
  ports String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Cooler {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCooler", fields: [storeId], references: [id])
  name String
  model String
  type String
  fanModel String
  rgb String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Motherboard {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToMotherboard", fields: [storeId], references: [id])
  name String
  model String
  formFactor String
  wifi String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Warranty {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToWarranty", fields: [storeId], references: [id])
  name String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Answer {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToAnswer", fields: [storeId], references: [id])
  question String
  answers String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  name String
  value String
  computers Computer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Computer {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToComputer", fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToComputer", fields: [categoryId], references: [id])
  name String
  price Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  deliveryTime String
  processorId String
  processor Processor @relation(fields: [processorId], references: [id])
  graphicsId String
  graphics Graphics @relation(fields: [graphicsId], references: [id])
  memoryId String
  memory Memory @relation(fields: [memoryId], references: [id])
  storageId String
  storage Storage @relation(fields: [storageId], references: [id])
  powerId String
  power Power @relation(fields: [powerId], references: [id])
  pccaseId String
  pccase Pccase @relation(fields: [pccaseId], references: [id])
  coolerId String
  cooler Cooler @relation(fields: [coolerId], references: [id])
  motherboardId String
  motherboard Motherboard @relation(fields: [motherboardId], references: [id])
  warrantyId String
  warranty Warranty @relation(fields: [warrantyId], references: [id])
  softwareId String
  software Software @relation(fields: [softwareId], references: [id])
  colorId String
  color Color @relation(fields: [colorId], references: [id])
  images ImageComputer[]
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
  @@index([processorId])
  @@index([graphicsId])
  @@index([memoryId])
  @@index([storageId])
  @@index([powerId])
  @@index([pccaseId])
  @@index([coolerId])
  @@index([motherboardId])
  @@index([warrantyId])
  @@index([softwareId])
  @@index([colorId])
}

model ImageComputer {
  id String @id @default(uuid())
  computerId String
  computer Computer @relation(fields: [computerId], references: [id], onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([computerId])

}

model Order {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[]
  isPaid Boolean @default(false)
  name String @default("")
  phone String @default("")
  address String @default("")
  country String @default("")
  city String @default("")
  postalCode String @default("")
  email String @default("")
  total Decimal @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model OrderItem {
  id String @id @default(uuid())
  orderId String
  order Order @relation(fields: [orderId], references: [id])
  computerId String
  computer Computer @relation(fields: [computerId], references: [id])

  @@index([orderId])
  @@index([computerId])

}